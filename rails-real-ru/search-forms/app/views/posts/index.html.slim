= content_for :title do
  = 'Posts'

= link_to 'New Post', new_post_path, class: 'btn btn-primary my-2'

.p-3.bg-light
  / BEGIN
  = search_form_for @q do |f|
    .row.my-2.align-items-center
      .col-5
        = f.input :title_cont
      .col-5
        / Для вывода списка состояний можно выполнить map() на списке состояний.
        = f.input :aasm_state_eq, as: :select, collection: Post.aasm.states.map(&:name)
      .col-2
        = f.submit 'Search', class: 'btn btn-primary me-2'
        = link_to 'Reset', url_for, class: 'btn btn-outline-primary'

  / = simple_form_for(@q, data: { turbo: false }) do |f|
  /   = f.error_notification
  /   = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  /   .form-inputs
  /     = f.input :title_cont

  /   .form-actions
  /     = f.button :submit, 'Search', class: 'btn-primary'
  / END

table.table.table-striped.table-hover.mb-5
  thead
    tr
      th{ scope = 'col' } #
      th{ scope = 'col' } Title
      th{ scope = 'col' } State
      th

  tbody
    - @posts.each_with_index do |post, i|
      tr
        th{ scope = 'row' } = i + 1
        td = post.title
        td = post.aasm.current_state
        td.d-flex
          .me-4 = link_to 'Show', post
          .me-4 = link_to 'Edit', edit_post_path(post)
          = link_to 'Destroy', post, data: { confirm: 'Are you sure?' }, method: :delete

= link_to 'New Post', new_post_path, class: 'btn btn-primary'
